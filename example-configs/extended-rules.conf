# Extended make file for qubes-builder

################################################################################
#             E X T R A   M A K E F I L E   T A R G E T S
################################################################################

# Used to track automatically modified values
_ORIGINAL_DISTS_VM := $(DISTS_VM)
_ORIGINAL_DISTS_ALL := $(DISTS_ALL)
_ORIGINAL_COMPONENTS := $(COMPONENTS)
_ORIGINAL_TEMPLATE := $(TEMPLATE)
_ORIGINAL_TEMPLATE_FLAVOR := $(TEMPLATE_FLAVOR)
_ORIGINAL_TEMPLATE_ALIAS := $(TEMPLATE_ALIAS)
_ORIGINAL_TEMPLATE_LABEL := $(TEMPLATE_LABEL)

# ------------------------------------------------------------------------------
# Apply aliases and add TEMPLATE_LABEL if it does not already exist
# ------------------------------------------------------------------------------
ifdef DISTS_DEFINED
  _alias_name = $(word 1,$(subst :, ,$(_alias)))
  _alias_flavor = $(word 2,$(subst :, ,$(_alias)))
  _template_name = $(subst +,-,$(_alias_name))
  _aliases = $(eval DISTS_VM := $(patsubst $(_alias_name), $(_alias_flavor), $(DISTS_VM))) \
            $(if $(filter $(_alias_flavor):$(_template_name), $(TEMPLATE_LABEL)),, \
                $(eval TEMPLATE_LABEL += $(_alias_flavor):$(_template_name)) \
            )
  $(strip $(foreach _alias, $(TEMPLATE_ALIAS), $(_aliases)))
endif

# ------------------------------------------------------------------------------
#  Add BUILDER_PLUGINS and their COMPONENTS
# ------------------------------------------------------------------------------
ifneq (,$(findstring wheezy, $(DISTS_VM))$(findstring jessie, $(DISTS_VM)))
  BUILDER_PLUGINS += builder-debian
endif
ifneq (,$(findstring trusty, $(DISTS_VM))$(findstring utopic, $(DISTS_VM))$(findstring vivid, $(DISTS_VM)))
  BUILDER_PLUGINS += builder-debian
endif
ifneq (,$(findstring archlinux, $(DISTS_VM)))
  BUILDER_PLUGINS += builder-archlinux
endif

BUILDER_PLUGINS_DISTS :=
_dist = $(word 1,$(subst +, ,$(_dist_vm)))
_plugin = $(BUILDER_PLUGINS_$(_dist))
BUILDER_PLUGINS_DISTS += $(strip $(foreach _dist_vm, $(DISTS_VM), $(_plugin)))

# Add BUILDER_PLUGINS COMPONENTS automatically if they do not already exist
_component = $(if $(filter $(_plugin), $(COMPONENTS)),, $(_plugin))
_components += $(foreach _plugin, $(BUILDER_PLUGINS), $(_component))
COMPONENTS := $(COMPONENTS) $(_components)

# ------------------------------------------------------------------------------
# Add / Remove Whonix components based on if Whonix is being built
# ------------------------------------------------------------------------------
ifneq (,$(findstring wheezy+whonix, $(DISTS_VM)))
  WHONIX := 1
  COMPONENTS := $(strip $(COMPONENTS) $(WHONIX_COMPONENTS))
  TEMPLATE := $(strip $(TEMPLATE) $(WHONIX_COMPONENTS))
else
  COMPONENTS := $(strip $(filter-out $(WHONIX_COMPONENTS), $(COMPONENTS)))
  TEMPLATE := $(strip $(filter-out $(WHONIX_COMPONENTS), $(TEMPLATE)))
endif

# ------------------------------------------------------------------------------
# Sets the COMPONENTS to only what is needed to build the template
# ------------------------------------------------------------------------------
ifeq ($(TEMPLATE_ONLY), 1)
  COMPONENTS := $(TEMPLATE)
  DIST_DOM0 :=
endif

# ------------------------------------------------------------------------------
# Include any BUILDER_PLUGINS builder.conf configurations
# ------------------------------------------------------------------------------
-include $(addsuffix /builder.conf,$(addprefix $(SRC_DIR)/,$(BUILDER_PLUGINS)))
-include $(addsuffix /builder.conf,$(addprefix $(SRC_DIR)/,$(BUILDER_PLUGINS_DISTS)))

# ------------------------------------------------------------------------------
# Remove any unused labels
# ------------------------------------------------------------------------------
ifdef DISTS_DEFINED
  _template_flavor = $(word 1,$(subst :, ,$(_LABEL)))
  _template_name = $(word 2,$(subst :, ,$(_LABEL)))
  _labels = $(filter $(filter $(_template_flavor), $(DISTS_VM)):$(_template_name), $(_LABEL))
  TEMPLATE_LABEL := $(strip $(foreach _LABEL, $(TEMPLATE_LABEL), $(_labels)))
endif

# ------------------------------------------------------------------------------
# Get rid of quotes
# ------------------------------------------------------------------------------
TEMPLATE_FLAVOR := $(shell echo $(TEMPLATE_FLAVOR))
WHONIX_DIR := $(shell echo $(WHONIX_DIR))
DEPENDENCIES := $(shell echo $(DEPENDENCIES))

# ------------------------------------------------------------------------------
# Set current branch for builder so it does not change to master
# ------------------------------------------------------------------------------
BRANCH_builder := $(shell git rev-parse --abbrev-ref HEAD)


.PHONY: umount
umount:
	-@dir="$$(readlink -m .)"; \
	$(SRC_DIR)/builder-debian/scripts/umount_kill.sh "$$dir/qubes-src/"; \
	for dist in $(DISTS_VM) $(DIST_DOM0); do \
	    dist=$${dist%%+*}; \
	    $(SRC_DIR)/builder-debian/scripts/umount_kill.sh "$$dir/chroot-$$dist"; \
	done;

.PHONY: patch
patch::
	# Move a generic Makefile.builder over to non-qubes packages so they can be
	# built with qubes-builder
	@echo "Applying pathces..."; \
	repos=$(addprefix $(SRC_DIR)/,"whonix-setup-wizard python-guimessages qubes-whonix"); \
	for repo in $$repos; do \
	    if [ -d "$$repo" ]; then \
	            echo "Applying whonix related patches to $$repo..."; \
	            cp -pf $(SRC_DIR)/builder-debian/scripts/Makefile.builder $$repo ; \
	    fi \
	done;

build-info:: normal  = \033[0;0m
build-info:: black   = \033[1;30m
build-info:: red     = \033[1;31m
build-info:: blue    = \033[1;34m
build-info:: label = $(blue)
build-info:: _item = $(strip $(if $(filter $(_ITEM), $(if $(4), $(4), $(_ITEM))), $(1)$(_ITEM)$(normal), $(red)$(_ITEM)$(normal)))
build-info:: _items = $(strip $(foreach _ITEM, $(3), $(strip $(_item),)))
build-info:: _data = "$(1)$(strip $(_items))" | fmt -w110  | sed -e 's/^/    /'
build-info:: _info = echo -e "$(label)$(strip $(2)):$(normal)"; echo -e $(_data)
build-info::
	@$(if $(findstring $(VERBOSE), 0),,
	  @echo "================================================================================"
	  @echo "                           B U I L D   I N F O                                  "
	  @echo -e "$(red)Items in red indicate it was automatically generated by configuration file(s)$(normal)"
	  @echo "================================================================================"
	  # (1): Item Color, (2): Label, (3): Item, (4): Original item used to compare if changed
	  @$(call _info, $(black), DISTS_VM,        $(DISTS_VM), $(_ORIGINAL_DISTS_VM))
	  @$(call _info, $(black), DISTS_ALL,       $(DISTS_ALL), $(_ORIGINAL_DISTS_ALL))
	  @$(call _info, $(black), DIST_DOM0,       $(DIST_DOM0))
	  @$(call _info, $(black), BUILDER_PLUGINS, $(BUILDER_PLUGINS) $(BUILDER_PLUGINS_DISTS))
	  @$(call _info, $(black), GIT_REPOS,       $(GIT_REPOS))
	  @$(call _info, $(black), TEMPLATE,        $(TEMPLATE), $(_ORIGINAL_TEMPLATE))
	  @$(call _info, $(black), COMPONENTS,      $(COMPONENTS), $(_ORIGINAL_COMPONENTS))
	  @$(call _info, $(black), TEMPLATE_ALIAS,  $(TEMPLATE_ALIAS) $(_ORIGINAL_TEMPLATE_ALIAS))
	  @$(call _info, $(black), TEMPLATE_LABEL,  $(TEMPLATE_LABEL), $(_ORIGINAL_TEMPLATE_LABEL))
	  @$(call _info, $(black), TEMPLATE_FLAVOR_SALT, $(TEMPLATE_FLAVOR_SALT))
	)

.PHONY: get-sources
get-sources:: unset DISTS_DEFINED
get-sources:: COMPONENTS := $(filter-out builder $(BUILDER_PLUGINS), $(COMPONENTS))
get-sources:: COMPONENTS := $(BUILDER_PLUGINS) $(COMPONENTS)
get-sources:: GIT_REPOS := $(addprefix $(SRC_DIR)/, $(COMPONENTS))
get-sources:: build-info
	@true

.PHONY: template-modules
template-modules:: COMPONENTS :=  $(TEMPLATE)
template-modules:: umount patch build-info qubes-vm
	@echo "Creating template modules..."

qubes-vm:: COMPONENTS := $(TEMPLATE)
qubes-vm:: 
	@true

.PHONY: template

template linux-template-builder:: umount build-info
	@echo "Creating template(s)..."

#.PHONY: clean-rpms 
clean-rpms:: clean-installer-rpms
	@for dist in $(shell ls qubes-rpms-mirror-repo/); do \
	    echo "Cleaning up debs in qubes-pkgs-mirror-repo/$$dist/dists/..."; \
	    sudo rm -rf qubes-pkgs-mirror-repo/$$dist/dists/* || true ;\
	    echo "Cleaning up debs in qubes-pkgs-mirror-repo/$$dist/deb/..."; \
	    sudo rm -rf qubes-pkgs-mirror-repo/$$dist/deb/* || true ;\
	done
	@echo 'Cleaning up deb in qubes-src/*/deb/*...'; \
	sudo rm -rf qubes-src/*/deb/* || true;

# Does a regular clean as well as removes all prepared and created tempalte
# images and chroot-*
# About the only items left in tact are is the qubes-src directory tree
.PHONY: mostlyclean
mostlyclean:: umount clean clean-rpms
	@dir="$$(readlink -m .)"; \
	pkgdir="$$dir/qubes-src/linux-template-builder"; \
	if [ -d "$$pkgdir" ] ; then \
	    pushd "$$pkgdir"; \
	    sudo rm -rf prepared_images/*  || true; \
	    sudo rm -rf qubeized_images/*  || true; \
	    sudo rm -rf rpm/noarch/*  || true; \
	    sudo rm -rf pkgs-for-template/* || true; \
	    popd; \
	fi; \
	dists=(); \
	for dist in $(DISTS_VM) $(DIST_DOM0) "chroot-debian"; do \
	    dist=$${dist%%+*}; \
	    if [[ ! $${dists[@]} =~ $$dist ]] ; then \
	        dists+=("$${dist}"); \
	        sudo rm -rf $$dir/chroot-$$dist || true; \
	    fi; \
	done; \
	sudo rm -rf $$dir/qubes-pkgs-mirror-repo/repodata/* || true;

.PHONY: clean-chroot
clean-chroot:: 
	@dists="$(shell ls -d chroot-*)"; \
	for dist in $$dists; do \
	    $(SRC_DIR)/builder-debian/scripts/umount_kill.sh "$$dist"; \
	    sudo rm -rf "$$dist"; \
	done

.PHONY: clean-all
clean-all:: umount clean-chroot
	@dir="$$(readlink -m .)"; \
	sudo rm -f $$dir/qubes-pkgs-mirror-repo/repodata/* || true;

about::
	@echo "extended-rules.conf"

# vim: filetype=make

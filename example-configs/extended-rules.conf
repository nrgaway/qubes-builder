# Extended make file for qubes-builder

################################################################################
#             E X T R A   M A K E F I L E   T A R G E T S
################################################################################

# Get rid of quotes
TEMPLATE_FLAVOR := $(shell echo $(TEMPLATE_FLAVOR))
WHONIX_DIR := $(shell echo $(WHONIX_DIR))
DEPENDENCIES := $(shell echo $(DEPENDENCIES))

# Clear Whonix components if Whonix template is not being built
ifneq (,$(findstring wheezy+whonix,$(DISTS_VM)))
  WHONIX := 1
else
  COMPONENTS := $(filter-out Whonix qubes-whonix, $(COMPONENTS))
  TEMPLATE := $(filter-out Whonix qubes-whonix, $(TEMPLATE))
endif

# Clear TEMPLATE if not a TEMPLATE_ONLY build to prevent build recursion
ifneq ($(TEMPLATE_ONLY), 1)
  TEMPLATE :=
endif

.PHONY: umount
umount:
	@dir="$$(readlink -m .)"; \
	./scripts-debian/umount_kill.sh "$$dir/qubes-src/"; \
	for dist in $(DISTS_VM) $(DIST_DOM0); do \
	    dist=$${dist%%+*}; \
	    ./scripts-debian/umount_kill.sh "$$dir/chroot-$$dist"; \
	done;

.PHONY: patch
patch::
        # Move a generic Makefile.builder over to non-qubes packages so they can be
        # built with qubes-builder
	@echo "Applying pathces..."; \
	repos=$(addprefix $(SRC_DIR)/,"whonix-setup-wizard python-guimessages qubes-whonix"); \
	for repo in $$repos; do \
	    if [ -d "$$repo" ]; then \
    	        echo "Applying whonix related patches to $$repo..."; \
    	        cp -pf ./scripts-debian/Makefile.builder $$repo ; \
	    fi \
	done;

.PHONY: install-deps
install-deps::
	@sudo yum install -y $(DEPENDENCIES)

.PHONY: get-sources
get-sources:: umount install-deps 
	# Whonix Keyring
	@if [ "$$WHONIX" == "1" ]; then \
	    # calling verify-git-tag.sh will create keyrings dir and add developer keys
	    dir="$$(readlink -m .)"; \
	    KEYRING_DIR_GIT="$$dir/keyrings/git"; \
	    export GNUPGHOME="$$(readlink -m $$KEYRING_DIR_GIT)"; \
	    ./verify-git-tag.sh; \
            if ! gpg --list-keys 916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA >/dev/null 2>&1; then \
                echo "**********************************************************"; \
                echo "*** You've selected Whonix build, this will import     ***"; \
                echo "*** Whonix code signing key to qubes-builder, globally ***"; \
                echo "**********************************************************"; \
                echo -n "Do you want to continue? (y/N) "; \
                read answer; \
                [ "$answer" == "y" ] || exit 1; \
                echo '916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA:6:' | gpg --import-ownertrust; \
                gpg --import keys_debian/whonix-developer-patrick.asc; \
                gpg --list-keys; \
            fi; \
	    touch "$$GNUPGHOME/pubring.gpg"; \
	fi

.PHONY: template-modules
template-modules:: umount patch $(addsuffix -vm,$(TEMPLATE))
	@echo "Creating template(s)..."

.PHONY: template
template:: umount
	@echo "DISTS_VM    = $(DISTS_VM)"
	@echo "DISTS_ALL   = $(DISTS_ALL)"
	@echo "DIST_DOM0   = $(DIST_DOM0)"
	@echo "TEMPLATE    = $(TEMPLATE)"
	@echo "COMPONENTS  = $(COMPONENTS)"
	$(MAKE) $(TEMPLATE)
	exit 0

#.PHONY: clean-rpms 
clean-rpms:: clean-installer-rpms
	@for dist in $(shell ls qubes-rpms-mirror-repo/); do \
	    echo "Cleaning up debs in qubes-rpms-mirror-repo/$$dist/dists/..."; \
	    sudo rm -rf qubes-rpms-mirror-repo/$$dist/dists/* || true ;\
	    echo "Cleaning up debs in qubes-rpms-mirror-repo/$$dist/deb/..."; \
	    sudo rm -rf qubes-rpms-mirror-repo/$$dist/deb/* || true ;\
	done
	@echo 'Cleaning up deb in qubes-src/*/deb/*...'; \
	sudo rm -rf qubes-src/*/deb/* || true;

# Does a regular clean as well as removes all prepared and created tempalte
# images and chroot-*
# About the only items left in tact are is the qubes-src directory tree
.PHONY: mostlyclean
mostlyclean:: umount clean clean-rpms
	@dir="$$(readlink -m .)"; \
	pkgdir="$$dir/qubes-src/linux-template-builder"; \
	if [ -d "$$pkgdir" ] ; then \
	    pushd "$$pkgdir"; \
	    sudo rm -rf prepared_images/*  || true; \
	    sudo rm -rf qubeized_images/*  || true; \
	    sudo rm -rf rpm/noarch/*  || true; \
	    sudo rm -rf yum_repo_qubes/* || true; \
	    popd; \
	fi; \
	dists=(); \
	for dist in $(DISTS_VM) $(DIST_DOM0) "chroot-debian"; do \
	    dist=$${dist%%+*}; \
	    if [[ ! $${dists[@]} =~ $$dist ]] ; then \
	        dists+=("$${dist}"); \
	        sudo rm -rf $$dir/chroot-$$dist || true; \
	    fi; \
	done; \
	sudo rm -rf $$dir/qubes-rpms-mirror-repo/repodata/* || true;

.PHONY: clean-chroot
clean-chroot:: 
	@dists="$(shell ls -d chroot-*)"; \
	for dist in $$dists; do \
	    ./scripts-debian/umount_kill.sh "$$dist"; \
	    sudo rm -rf "$$dist"; \
	done

.PHONY: clean-all
clean-all:: umount clean-chroot
	@dir="$$(readlink -m .)"; \
	sudo rm -f $$dir/qubes-rpms-mirror-repo/repodata/* || true;

# Returns variable value
# Example usage: GET_VAR=DISTS_VM make get-var
.PHONY: get-var
get-var::
	@GET_VAR=$${!GET_VAR}; \
	echo "$${GET_VAR}"

about::
	@echo "extended-rules.conf"


# Configuration file for qubes-builder
#
# All lines which begins with "#" are treated as comments
# Assigments can be made with VAR_NAME="VALUE" 
# IMPORTANT: no spaces around "="

# Release Repo
GIT_SUBDIR = marmarek
BRANCH = release2
NO_SIGN = 1

DEBUG = 1
VERBOSE = 2

DISTS_VM := 
#DISTS_VM += vivid
DISTS_VM += utopic
#DISTS_VM += trusty
#DISTS_VM += wheezy+whonix-gateway
#DISTS_VM += wheezy+whonix-workstation
#DISTS_VM += wheezy
#DISTS_VM += wheezy+gnome
#DISTS_VM += jessie
#DISTS_VM += jessie+gnome
#DISTS_VM += wheezy+whonix-workstation+gnome
#DISTS_VM += fc20

TEMPLATE_LABEL  = wheezy+whonix-gateway:whonix-gateway-experimental
TEMPLATE_LABEL += wheezy+whonix-workstation:whonix-workstation-experimental
TEMPLATE_LABEL += wheezy+whonix-workstation+gnome:whonix-workstation-gnome
TEMPLATE_LABEL += wheezy+gnome:debian-7-x64-gnome
TEMPLATE_LABEL += jessie+gnome:debian-8-x64-gnome
TEMPLATE_LABEL += trusty:ubuntu-trusty-x64
TEMPLATE_LABEL += trusty+gnome:ubuntu-trusty-x64-gnome
TEMPLATE_LABEL += utopic:ubuntu-utopic-x64
TEMPLATE_LABEL += utopic+gnome:ubuntu-utopic-x64-gnome

# Location of Sub-Templates that are not in default location. 
# Example: wheezy+whonix-gateway would normally be in 
#          $${SCRIPTSDIR}/wheezy+whonix-gateway
#   -or-   $${SCRIPTSDIR}/wheezy
TEMPLATE_FLAVOR_DIR = +gnome:$${SCRIPTSDIR}/gnome

COMPONENTS = \
    vmm-xen \
    core-vchan-xen \
    linux-utils \
    core-admin \
    core-admin-linux \
    core-agent-linux \
    linux-kernel \
    artwork \
    gui-common \
    gui-daemon \
    gui-agent-linux \
    gui-agent-xen-hvm-stubdom \
    qubes-app-linux-split-gpg \
    qubes-app-linux-tor \
    qubes-app-thunderbird \
    qubes-app-linux-pdf-converter \
    linux-template-builder \
    desktop-linux-kde \
    desktop-linux-xfce4 \
    qubes-manager \
    installer-qubes-os \
    linux-yum \
    vmm-xen-windows-pvdrivers \
    antievilmaid \
    qubes-builder \
    Whonix

BRANCH_antievilmaid = master
#BRANCH_linux_template_builder = master
BRANCH_linux_yum = master
BRANCH_qubes_app_linux_split_gpg = master
BRANCH_qubes_app_linux_tor = master
BRANCH_qubes_app_thunderbird = master
BRANCH_qubes_app_linux_pdf_converter = master
BRANCH_qubes_app_linux_img_converter = master
#BRANCH_qubes_builder = master
BRANCH_desktop_linux_kde = master
BRANCH_desktop_linux_xfce4 = master
BRANCH_vmm_xen = xen-4.1
BRANCH_linux_kernel = stable-3.12

#NO_CHECK=

# Personal qubes-builder repo
GIT_URL_qubes_builder = git@github.com:nrgaway/qubes-builder.git
BRANCH_qubes_builder = ubuntu

# Personal linux-template-builder repo
GIT_URL_linux_template_builder = git@github.com:nrgaway/linux-template-builder.git
BRANCH_linux_template_builder = ubuntu

# Whonix repo
WHONIX_DIR = $(shell readlink -m ./qubes-src/Whonix)
GIT_URL_Whonix = https://github.com/Whonix/Whonix.git
BRANCH_Whonix = 9.4

# For Whonix only (DEBUGGING)
# Take snapshot when debootstrap is complete as well as when additional packages have
# been installed (before Whonix is run) so a snapshot can be used in place of 
# rebuilding
SNAPSHOT=0

# Qubes-builder deps
DEPS = rpmdevtools rpm-build createrepo rpm-sign

# Additional for debian template
DEPS += debootstrap dpkg-dev

# Use systemd-nspawn instead of chroot
# - Set to "1" to enable using systemd as chroot.  Note that if 'LXC_ENABLE' is
#   also enabled, LXC containers will be used and supersede this setting
SYSTEMD_NSPAWN_ENABLE ?= 0

# Use lxc-attach on running lxc container instead of chroot
LXC_ENABLE ?= 0

# LXC directory
LXC_DIR ?= $(CURDIR)/$(SRC_DIR)/linux-template-builder/lxc

# LXC depends
LXC_DEPENDENCIES ?= lxc lxc-templates lxc-extra lxc-doc bridge-utils tunctl libvirt-daemon-driver-network libvirt-daemon-config-network libvirt-daemon-config-nwfilter

################################################################################
#             E X T R A   M A K E F I L E   T A R G E T S
################################################################################

# Get rid of quotes
TEMPLATE_FLAVOR := $(shell echo $(TEMPLATE_FLAVOR))
WHONIX_DIR := $(shell echo $(WHONIX_DIR))
DEPENDENCIES := $(shell echo $(DEPENDENCIES))
LXC_DEPENDENCIES := $(shell echo $(LXC_DEPENDENCIES))

ifeq (1,$(LXC_ENABLE))
DEPENDENCIES += $(LXC_DEPENDENCIES)
endif

umount:
	@DIR="$$(readlink -m .)"; \
	./scripts-debian/umount_kill.sh "$$DIR/qubes-src/" || true; \
	for DIST in $(DISTS_ALL); do \
	    DIST=$${DIST%%+*}; \
	    ./scripts-debian/umount_kill.sh "$$DIR/chroot-$$DIST" || true; \
	done;

patch::
	# Give Whonix a Makefile so we can clean
	@if [ -d "qubes-src/Whonix" ] && ! [ -f "qubes-src/Whonix/Makefile" ]; then \
	    cp -pn scripts-debian/Makefile.whonix qubes-src/Whonix/Makefile; \
	fi

install-deps::
	@sudo yum install $(DEPS)

lxc: install-deps
	@if [ "$${LXC_ENABLE}" == "1" ]; then \
	    echo "Setting up LXC..."; \
	    mkdir -p "$${LXC_DIR}"; \
	    sudo systemctl restart libvirtd.service; \
	fi

get-sources:: umount install-deps nrgaway-keyring
	# Whonix Keyring
	# calling verify-git-tag.sh will create keyrings dir and add developer keys
	@DIR="$$(readlink -m .)"; \
	KEYRING_DIR_GIT="$$DIR/keyrings/git"; \
	export GNUPGHOME="$$(readlink -m $$KEYRING_DIR_GIT)"; \
	./verify-git-tag.sh; \
	echo '916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA:6:' | gpg --import-ownertrust; \
	gpg --import keys_debian/whonix-developer-patrick.asc; \
	gpg --list-keys; \
	touch "$$GNUPGHOME/pubring.gpg"

template-modules:: umount patch lxc
	# Ensure all files are owned by $USER since some .git/index
	# files seem to get changed to 'root' and results in a
	# build error when trying to hardlink to them
	@DIR="$$(readlink -m .)"; \
	sudo chown -R $$USER "$$DIR/qubes-src"; \
	make -C qubes-src/Whonix get-sources verify-sources; \
	$(MAKE) --no-print-directory qubes-vm

template:: umount

clean-rpms:: clean-installer-rpms
	@for dist in $(shell ls qubes-rpms-mirror-repo/); do \
	    echo "Cleaning up debs in qubes-rpms-mirror-repo/$$dist/dists/..."; \
	    sudo rm -rf qubes-rpms-mirror-repo/$$dist/dists/* || true ;\
	    echo "Cleaning up debs in qubes-rpms-mirror-repo/$$dist/deb/..."; \
	    sudo rm -rf qubes-rpms-mirror-repo/$$dist/deb/* || true ;\
	done
	@echo 'Cleaning up deb in qubes-src/*/deb/*...'; \
	sudo rm -rf qubes-src/*/deb/* || true;

# Does a regular clean as well as removes all prepared and created tempalte
# images and chroot-*
# About the only items left in tact are is the qubes-src directory tree
mostlyclean:: umount clean clean-rpms
	@DIR="$$(readlink -m .)"; \
	PKGDIR="$$DIR/qubes-src/linux-template-builder"; \
	if [ -d "$$PKGDIR" ] ; then \
	    pushd "$$PKGDIR"; \
	    sudo rm -rf prepared_images/*  || true; \
	    sudo rm -rf qubeized_images/*  || true; \
	    sudo rm -rf rpm/noarch/*  || true; \
	    popd; \
	fi; \
	sudo rm -rf $(addprefix $$DIR/chroot-,$${DISTS_ALL[@]%%+*}) || true; \
	sudo rm -f $$DIR/qubes-rpms-mirror-repo/repodata/* || true;

clean-all:: umount patch
	@DIR="$$(readlink -m .)"; \
	sudo rm -f $$DIR/qubes-rpms-mirror-repo/repodata/* || true;

nrgaway-keyring::
	# nrgaway Keyring
	# calling verify-git-tag.sh will create keyrings dir and add developer keys
	@DIR="$$(readlink -m .)"; \
	KEYRING_DIR_GIT="$$DIR/keyrings/git"; \
	export GNUPGHOME="$$(readlink -m $$KEYRING_DIR_GIT)"; \
	./verify-git-tag.sh; \
	echo 'E0E32283FDCAC1A510078F271BB9B1FB5A4C6DAD:6:' | gpg --import-ownertrust; \
	gpg --import nrgaway-qubes-signing-key.asc; \
	gpg --list-keys; \
	touch "$$GNUPGHOME/pubring.gpg"

about::
	@echo "whonix.conf"
